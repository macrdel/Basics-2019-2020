program ApproximateCalculations;
uses 
 UnitTypes, UnitComputingPart1;
var
e1, e2, e3: real;                                                                                              //Все значения задаваемой точности
x01_1, x01_2, a1, b1, a2, b2, x03_1, x03_2: real;                                                             //Все начальные приближения
x1_1, x1_2, xr1_1, xr1_2, x2_1, x2_2, xr2_1, xr2_2, x3_1, x3_2, xr3_1, xr3_2: real;                          //Все получившиеся корни
n1_1, n1_2, nr1_1, nr1_2, n2_1, n2_2, nr2_1, nr2_2, n3_1, n3_2, nr3_1, nr3_2: integer;                       //Все получившиеся количества итераций
f: TextFile;                                                                                                 //Файловая переменная для входного и выходного файла
begin
  if ParamCount < 2 then
  begin
    writeln('Недостаточно параметров');
    exit;
  end;
  AssignFile(f, Paramstr(1));
  Reset(f);
  
  // Вводим все исходные данные
  readln(f, e1, x01_1, x01_2, e2, a1, b1, a2, b2, e3, x03_1, x03_2);
  CloseFile(f);
  
  //Метод простых итераций
  //Для f1
  EasyIterations(f1, x01_1, e1, x1_1, n1_1);
  RecEasyIterations(f1, x01_1, e1, xr1_1, nr1_1);
  //Для f2
  EasyIterations(f2, x01_2, e1, x1_2, n1_2);
  RecEasyIterations(f2, x01_2, e1, xr1_2, nr1_2);
  
  //Метод секущих
  //Для f1
  Secant(f1, a1, b1, e2, x2_1, n2_1);
  RecSecant(f1, a1, b1, e2, xr2_1, nr2_1);
  //Для f2
  Secant(f2, a2, b2, e2, x2_2, n2_2);
  RecSecant(f2, a2, b2, e2, xr2_2, nr2_2);
  
  //Метод Ньютона
  //Для f1
  Newton(f1, x03_1, e3, x3_1, n3_1);
  RecNewton(f1, x03_1, e3, xr3_1, nr3_1);
  //Для f2
  Newton(f2, x03_2, e3, x3_2, n3_2);
  RecNewton(f2, x03_2, e3, xr3_2, nr3_2);
  
  //Вывод результатов
  //Для f1
  AssignFile(f, Paramstr(2));
  Rewrite(f);
  writeln(f, 'Результаты для f1, полученные методом простых итераций: ');
  if (n1_1 > nmax) or (nr1_1 > nmax) then
    writeln(f, 'Превышено максимально допустимое количество итераций!')
   else
   begin
     writeln(f, 'Значение корня: ', x1_1);
     writeln(f, 'Значение функции в корне: ', f1(x1_1));
     writeln(f, 'Количество итераций: ', n1_1);
     writeln(f, 'Значение корня в рекурсивной подпрограмме: ', xr1_1);
     writeln(f, 'Значение функции в корне в рекурсивной подпрограмме: ', f1(xr1_1));
     writeln(f, 'Количество итераций в рекурсивной подпрограмме: ', nr1_1);
   end;
   writeln(f);
   
   writeln(f, 'Результаты для f1, полученные методом секущих: ');
  if (n2_1 > nmax) or (nr2_1 > nmax) then
    writeln(f, 'Превышено максимально допустимое количество итераций!')
   else
   begin
     writeln(f, 'Значение корня: ', x2_1);
     writeln(f, 'Значение функции в корне: ', f1(x2_1));
     writeln(f,'Количество итераций: ', n2_1);
     writeln(f, 'Значение корня в рекурсивной подпрограмме: ', xr2_1);
     writeln(f, 'Значение функции в корне в рекурсивной подпрограмме: ', f1(xr2_1));
     writeln(f,'Количество итераций в рекурсивной подпрограмме: ', nr2_1);
   end;
   writeln(f);
   
   writeln(f, 'Результаты для f1, полученные методом Ньютона: ');
  if (n3_1 > nmax) or (nr3_1 > nmax) then
    writeln(f, 'Превышено максимально допустимое количество итераций!')
   else
   begin
     writeln(f, 'Значение корня: ', x3_1);
     writeln(f, 'Значение функции в корне: ', f1(x3_1));
     writeln(f, 'Количество итераций: ', n3_1);
      writeln(f, 'Значение корня в рекурсивной подпрограмме: ', xr3_1);
     writeln(f, 'Значение функции в корне в рекурсивной подпрограмме: ', f1(xr3_1));
     writeln(f, 'Количество итераций в рекурсивной подпрограмме: ', nr3_1);
   end;
   writeln(f);
   
   //Для f2
  writeln(f, 'Результаты для f2, полученные методом простых итераций: ');
  if (n1_2 > nmax) or (nr1_2 > nmax) then
    writeln(f, 'Превышено максимально допустимое количество итераций!')
   else
   begin
     writeln(f, 'Значение корня: ', x1_2);
     writeln(f, 'Значение функции в корне: ', f1(x1_2));
     writeln(f, 'Количество итераций: ', n1_2);
     writeln(f, 'Значение корня в рекурсивной подпрограмме: ', xr1_2);
     writeln(f, 'Значение функции в корне в рекурсивной подпрограмме: ', f1(xr1_2));
     writeln(f, 'Количество итераций в рекурсивной подпрограмме: ', nr1_2);
   end;
   writeln(f);
   
   writeln(f, 'Результаты для f2, полученные методом секущих: ');
  if (n2_2 > nmax) or (nr2_2 > nmax) then
    writeln(f, 'Превышено максимально допустимое количество итераций!')
   else
   begin
     writeln(f, 'Значение корня: ', x2_2);
     writeln(f, 'Значение функции в корне: ', f1(x2_2));
     writeln(f, 'Количество итераций: ', n2_2);
     writeln(f, 'Значение корня в рекурсивной подпрограмме: ', xr2_2);
     writeln(f, 'Значение функции в корне в рекурсивной подпрограмме: ', f1(xr2_2));
     writeln(f, 'Количество итераций в рекурсивной подпрограмме: ', nr2_2);
   end;
   writeln(f);
   
   writeln(f, 'Результаты для f2, полученные методом Ньютона: ');
  if (n3_2 > nmax) or (nr3_2 > nmax) then
    writeln(f, 'Превышено максимально допустимое количество итераций!')
   else
   begin
     writeln(f, 'Значение корня: ', x3_2);
     writeln(f, 'Значение функции в корне: ', f1(x3_2));
     writeln(f, 'Количество итераций: ', n3_2);
    writeln(f, 'Значение корня в рекурсивной подпрограмме: ', xr3_2);
     writeln(f, 'Значение функции в корне в рекурсивной подпрограмме: ', f1(xr3_2));
     writeln(f, 'Количество итераций в рекурсивной подпрограмме: ', nr3_2); 
   end;
   writeln(f);
   CloseFile(f);
end.
  


