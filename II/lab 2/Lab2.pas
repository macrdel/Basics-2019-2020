program ApproximateCalculations;
uses 
 UnitTypes, UnitComputing;
var
e1, e2, e3: real;                                                  //Все значения задаваемой точности
x01_1, x01_2, a1, b1, a2, b2, x03_1, x03_2: real;                  //Все начальные приближения
x1_1, x1_2, x2_1, x2_2, x3_1, x3_2: real;                          //Все получившиеся корни
n1_1, n1_2, n2_1, n2_2, n3_1, n3_2: integer;                       //Все получившиеся количества итераций

begin
  
  //Метод простых итераций
  writeln('Ввести точность для метода простых итераций: ');
  readln(e1);
  //Для f1
  writeln('Ввести начальное приближение в методе простых итераций для f1: ');
  readln(x01_1);
  EasyIterations(f1, x01_1, e1, x1_1, n1_1);
  //Для f2
  writeln('Ввести начальное приближение в методе простых итераций для f2: ');
  readln(x01_2);
  EasyIterations(f2, x01_2, e1, x1_2, n1_2);
  writeln;
  
  //Метод секущих
  writeln('Ввести точность для метода секущих: ');
  readln(e2);
  //Для f1
  writeln('Ввести начальные границы отрезка в методе секущих для f1: ');
  readln(a1, b1);
  Secant(f1, a1, b1, e2, x2_1, n2_1);
  //Для f1
  writeln('Ввести начальные границы отрезка в методе секущих для f2: ');
  readln(a2, b2);
  Secant(f2, a2, b2, e2, x2_2, n2_2);
  writeln;
  
  //Метод Ньютона
  writeln('Ввести точность для метода Ньютона: ');
  readln(e3);
  //Для f1
  writeln('Ввести начальное приближение в методе Ньютона для f1: ');
  readln(x03_1);
  Newton(f1, x03_1, e3, x3_1, n3_1);
  //Для f2
  writeln('Ввести начальное приближение в методе Ньютона для f2: ');
  readln(x03_2);
  Newton(f2, x03_2, e3, x3_2, n3_2);
  writeln; writeln;
  
  //Вывод результатов
  //Для f1
  writeln('Результаты для f1, полученные методом простых итераций: ');
  if (n1_1 > nmax) then
    writeln('Превышено максимально допустимое количество итераций!')
   else
   begin
     writeln('Значение корня: ', x1_1);
     writeln('Значение функции в корне: ', f1(x1_1));
     writeln('Количество итераций: ', n1_1);
   end;
   writeln;
   
   writeln('Результаты для f1, полученные методом секущих: ');
  if (n2_1 > nmax) then
    writeln('Превышено максимально допустимое количество итераций!')
   else
   begin
     writeln('Значение корня: ', x2_1);
     writeln('Значение функции в корне: ', f1(x2_1));
     writeln('Количество итераций: ', n2_1);
   end;
   writeln;
   
   writeln('Результаты для f1, полученные методом Ньютона: ');
  if (n3_1 > nmax) then
    writeln('Превышено максимально допустимое количество итераций!')
   else
   begin
     writeln('Значение корня: ', x3_1);
     writeln('Значение функции в корне: ', f1(x3_1));
     writeln('Количество итераций: ', n3_1);
   end;
   writeln;
   
   //Для f2
  writeln('Результаты для f2, полученные методом простых итераций: ');
  if (n1_2 > nmax) then
    writeln('Превышено максимально допустимое количество итераций!')
   else
   begin
     writeln('Значение корня: ', x1_2);
     writeln('Значение функции в корне: ', f1(x1_2));
     writeln('Количество итераций: ', n1_2);
   end;
   writeln;
   
   writeln('Результаты для f2, полученные методом секущих: ');
  if (n2_2 > nmax) then
    writeln('Превышено максимально допустимое количество итераций!')
   else
   begin
     writeln('Значение корня: ', x2_2);
     writeln('Значение функции в корне: ', f1(x2_2));
     writeln('Количество итераций: ', n2_2);
   end;
   writeln;
   
   writeln('Результаты для f2, полученные методом Ньютона: ');
  if (n3_2 > nmax) then
    writeln('Превышено максимально допустимое количество итераций!')
   else
   begin
     writeln('Значение корня: ', x3_2);
     writeln('Значение функции в корне: ', f1(x3_2));
     writeln('Количество итераций: ', n3_2);
   end;
   writeln;
   
end.
  


